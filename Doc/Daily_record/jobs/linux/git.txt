0.git的基本使用.
	0_1.新建一个文件并推送到服务器
		1).touch readme.txt
		2).git add readme.txt
		3).git commit -m "readme"
		4).git remote add origin git@xxx.xxx.xxx.xxx:/home/git/project.git
		5).git push origin master

	0_2_2.git的基本使用技巧:
		git pull git@10.10.10.11:/home/git/project.git
		git push origin master

1.git客户端初始化配置:
	1).用户信息:
	安装完 Git 之后，要做的第一件事就是设置你的用户名和邮件地址。 
	git config --global user.name "John Doe"
	git config --global user.email johndoe@example.com

2.Git五分钟教程:
	#入门

	1).使用Git前，需要先建立一个仓库(repository)。您可以使用一个已经存在的目录作为Git仓库或创建一个空目录。

		1.1).使用您当前目录作为Git仓库，我们只需使它初始化。
		git init

		1.2).使用我们指定目录作为Git仓库,和第一步二选一.(初始化后，会在 newrepo 目录下会出现一个名为 .git 的目录，所有 Git 需要的数据和资源都存放在这个目录中)。
		git init newrepo

	#从现在开始，我们将假设您在Git仓库根目录下，除非另有说明。

	2).添加新文件:
		git add filename		#可以使用add... 继续添加任务文件。

	3).提交版本

		现在我们已经添加了这些文件，我们希望它们能够真正被保存在Git仓库。
		git commit -m "Adding files"
		如果您不使用-m，会出现编辑器来让你写自己的注释信息。

		当我们修改了很多文件，而不想每一个都add，想commit自动来提交本地修改，我们可以使用-a标识。
		git commit -a -m "Changed some files"
		git commit 命令的-a选项可将所有被修改或者已删除的且已经被git管理的文档提交到仓库中。

		###千万注意，-a不会造成新文件被提交，只能修改。###

	4).发布版本

		我们先从服务器克隆一个库并上传。
		git clone ssh://example.com/~/www/project.git

		现在我们修改之后可以进行推送到服务器。
		git push ssh://example.com/~/www/project.git

	5).取回更新

	如果您已经按上面的进行push，下面命令表示，当前分支自动与唯一一个追踪分支进行合并。
	git pull

	从非默认位置更新到指定的url。
	git pull http://git.example.com/project.git

	6).删除

	如何你想从资源库中删除文件，我们使用rm。
	git rm file

	7).分支与合并

	分支在本地完成，速度快。要创建一个新的分支，我们使用branch命令。
	git branch test

	branch命令不会将我们带入分支，只是创建一个新分支。所以我们使用checkout命令来更改分支。
	git checkout test

	第一个分支，或主分支，被称为"master"。
	git checkout master

	对其他分支的更改不会反映在主分支上。如果想将更改提交到主分支，则需切换回master分支，然后使用合并。
	git checkout master
	git merge test

	如果您想删除分支，我们使用-d标识。
	git branch -d test

3.Fugitive.vim的使用流程.
	1).:Gstatus窗口,通过"-",添加/删除文件
		命令				作用
		-					添加/删除文件
		\					向下分割一个窗口打开当前文件
		P					为当前文件运行 “git add -patch”
		cc					调用 :Gcommit
	2).Gcommit命令,写注释提交文件
	3).Gpull拉取文件,保持一致性
	4).Gpush推送文件到服务器
